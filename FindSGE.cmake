# - Try to find SGE
#
# This module accepts the following variables as input
#
#	SGE_LIBRARY_DIR:  Sets where sge's libraries are
#
# This module defines the following variables
#
#	SGE_FOUND
#	SGE_INCLUDE_DIRS
#	SGE_CORE_LIBRARY
#	SGE_LIBRARIES
#

FIND_PATH(
	SGE_INCLUDE_DIRS
	NAMES sge/exception.hpp
)

FIND_LIBRARY(
	SGE_CORE_LIBRARY
	NAMES sgecore
	PATHS "${SGE_LIBRARY_DIR}"
)

SET(
	SGE_LIBRARIES
	${SGE_CORE_LIBRARY}
)

FOREACH(
	COMPONENT
	${SGE_FIND_COMPONENTS}
)
	SET(
		SGE_CURRENT_LIB
		SGE_${COMPONENT}_LIBRARY
	)

	FIND_LIBRARY(
		${SGE_CURRENT_LIB}
		NAMES sge${COMPONENT}
		PATHS "${SGE_LIBRARY_DIR}"
	)

	IF(
		NOT ${SGE_CURRENT_LIB}
	)
		MESSAGE(
			FATAL_ERROR
			"${COMPONENT} not found!"
		)
	ENDIF()

	SET(
		SGE_LIBRARIES
		"${SGE_LIBRARIES};${${SGE_CURRENT_LIB}}"
	)

	MARK_AS_ADVANCED(
		SGE_${COMPONENT}_LIBRARY
	)
ENDFOREACH()

UNSET(
	SGE_CURRENT_LIB
)

INCLUDE(FindPackageHandleStandardArgs)

FIND_PACKAGE_HANDLE_STANDARD_ARGS(
	SGE
	DEFAULT_MSG
	SGE_INCLUDE_DIRS
	SGE_CORE_LIBRARY
)

MARK_AS_ADVANCED(
	SGE_INCLUDE_DIRS
	SGE_CORE_LIBRARY
)
