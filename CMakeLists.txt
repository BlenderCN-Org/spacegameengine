CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT (spacegameengine)

SET(EXTRA_CMAKE_MODULE_PATH "" CACHE PATH "Extra paths to search for cmake modules")

SET(CMAKE_MODULE_PATH "${EXTRA_CMAKE_MODULE_PATH};${CMAKE_SOURCE_DIR}/CMakeModules")

INCLUDE(FcpptCMakeUtils)

INCLUDE (CheckCXXCompilerFlag)
INCLUDE (CheckCXXSourceRuns)
INCLUDE (CheckSymbolExists)

INCLUDE_DIRECTORIES (${CMAKE_SOURCE_DIR}/include)

FIND_PACKAGE(
	Boost 1.46.0 REQUIRED
	filesystem
	system
)

INCLUDE_DIRECTORIES(SYSTEM ${Boost_INCLUDE_DIR})

LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})

# FIND FCPPT
FIND_PACKAGE(Fcppt REQUIRED)

INCLUDE_DIRECTORIES(${FCPPT_INCLUDE_DIRS})

# FIND MIZUIRO
FIND_PACKAGE(Mizuiro REQUIRED)

INCLUDE_DIRECTORIES(${MIZUIRO_INCLUDE_DIRS})

SET(CMAKE_REQUIRED_INCLUDES "${CMAKE_REQUIRED_INCLUDES};${MIZUIRO_INCLUDE_DIRS}")

CHECK_SYMBOL_EXISTS(
	"MIZUIRO_HAVE_FCPPT"
	"mizuiro/config.hpp"
	MIZUIRO_HAVE_FCPPT
)

UNSET(CMAKE_REQUIRED_INCLUDES)

IF(NOT MIZUIRO_HAVE_FCPPT)
	MESSAGE(WARNING "mizuiro has not been compiled with -D ENABLE_FCPPT=ON. Ternany visitation will not work.")
ENDIF()

# FIND AWL
FIND_PACKAGE(AWL REQUIRED)

INCLUDE_DIRECTORIES(${AWL_INCLUDE_DIRS})

MACRO(
	APPEND_SOURCE_DIR_AND_MAKE_GROUPS
	FILES
	RESULT
)
	UNSET(
		TEMP_RESULT
	)

	FOREACH(
		CUR_FILE
		${FILES}
	)
		SET(
			WHOLE_FILE
			${CMAKE_SOURCE_DIR}/${CUR_FILE}
		)

		GET_FILENAME_COMPONENT(
			REL_PATH
			${CUR_FILE}
			PATH
		)

		STRING(REPLACE "/" "\\" GROUPFOLDER ${REL_PATH})

		SOURCE_GROUP(
			${GROUPFOLDER}
			FILES
			${WHOLE_FILE}
		)

		SET(
			TEMP_RESULT
			${TEMP_RESULT}
			${WHOLE_FILE}
		)
	ENDFOREACH()

	SET(
		${RESULT}
		"${${RESULT}};${TEMP_RESULT}"
	)
ENDMACRO()

ADD_SUBDIRECTORY (src)

OPTION(ENABLE_TEST "Build the tests" OFF)

IF (ENABLE_TEST)
	ENABLE_TESTING()
	ADD_SUBDIRECTORY (tests)
ENDIF ()

OPTION(ENABLE_EXAMPLES "Build the examples" OFF)

IF (ENABLE_EXAMPLES)
	ADD_SUBDIRECTORY (examples)
ENDIF ()

INSTALL(
	DIRECTORY media/
	DESTINATION share/games/sge/media
)

INSTALL(
	FILES
	${CMAKE_SOURCE_DIR}/FindSGE.cmake
	DESTINATION share/cmake/Modules
)
